# Generated by Django 3.0.2 on 2020-04-21 01:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_totalPrice', models.IntegerField(default=0, verbose_name='Total Price')),
                ('order_deliveryFee', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Delivery Fee')),
                ('order_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Date and time of order')),
                ('order_customerID', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='order', to=settings.AUTH_USER_MODEL, verbose_name='Customer ID')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prod_name', models.CharField(max_length=30, verbose_name='Product Name')),
                ('prod_cat', models.CharField(max_length=30, verbose_name='Product Category')),
                ('prod_qty', models.IntegerField(default=0, verbose_name='Product Quantity')),
                ('prod_price', models.IntegerField(verbose_name='Product Price (in LL)')),
                ('prod_bestSeller', models.CharField(default='Unknown Yet', max_length=30, verbose_name='Product Best Seller')),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supp_name', models.CharField(max_length=30, verbose_name='Supplier Name')),
            ],
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supply_date', models.DateField(verbose_name='Date of supply')),
                ('supply_qty', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('supply_cost', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cost of 1 item (in LL)')),
                ('supply_productID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MunchBox.Product', verbose_name='Product ID')),
                ('supply_supplierID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MunchBox.Supplier', verbose_name='Supplier ID')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='suppliers',
            field=models.ManyToManyField(through='MunchBox.Supply', to='MunchBox.Supplier'),
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_productQty', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity Requested')),
                ('request_profit', models.IntegerField(default=0, verbose_name='Profit')),
                ('request_orderID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MunchBox.Order', verbose_name='Order ID')),
                ('request_productID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MunchBox.Product', verbose_name='Product ID')),
            ],
            options={
                'unique_together': {('request_orderID', 'request_productID')},
            },
        ),
    ]
